services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      # Uncomment and set your email for Let's Encrypt
      # - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - tinyretro-network
    restart: unless-stopped

  # Backend server (Rust/Axum)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - RUST_LOG=debug
    volumes:
      - ./server/retroboard.json:/app/retroboard.json
    networks:
      - tinyretro-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/ws`))"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.services.server.loadbalancer.server.port=3000"
      # WebSocket support
      - "traefik.http.routers.server.middlewares=websocket-headers"
      - "traefik.http.middlewares.websocket-headers.headers.customrequestheaders.Connection=upgrade"
      - "traefik.http.middlewares.websocket-headers.headers.customrequestheaders.Upgrade=websocket"
      # HTTPS redirect (uncomment for production)
      # - "traefik.http.routers.server-secure.rule=Host(`your-domain.com`) && (PathPrefix(`/api`) || PathPrefix(`/ws`))"
      # - "traefik.http.routers.server-secure.entrypoints=websecure"
      # - "traefik.http.routers.server-secure.tls.certresolver=myresolver"

  # Frontend client (SvelteKit/Nginx)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    networks:
      - tinyretro-network
    restart: unless-stopped
    depends_on:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`localhost`)"
      - "traefik.http.routers.client.entrypoints=web"
      - "traefik.http.routers.client.priority=1"
      - "traefik.http.services.client.loadbalancer.server.port=80"
      # HTTPS redirect (uncomment for production)
      # - "traefik.http.routers.client-secure.rule=Host(`your-domain.com`)"
      # - "traefik.http.routers.client-secure.entrypoints=websecure"
      # - "traefik.http.routers.client-secure.tls.certresolver=myresolver"
      # - "traefik.http.routers.client.middlewares=redirect-to-https"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

networks:
  tinyretro-network:
    driver: bridge

volumes:
  letsencrypt:
